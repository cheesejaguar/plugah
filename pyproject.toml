[project]
name = "plugah"
version = "0.1.0"
description = "Multi-agent orchestration system with organizational hierarchy"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "Plugah Team", email = "hello@plugah.ai" }
]
keywords = ["ai", "agents", "orchestration", "crewai", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "crewai>=0.1.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    "networkx>=3.0",
    "jsonpatch>=1.33",
    "httpx>=0.25.0",
    "pydantic-settings>=2.0.0",
    "jinja2>=3.1.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
demo = [
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.27.0",
    "sse-starlette>=2.0.0",
    "aiofiles>=23.0.0",
    "python-multipart>=0.0.6",
]

[project.scripts]
plugah-demo = "plugah.demo.demo_cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["plugah"]

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "W", "UP", "B", "C90", "RUF"]
ignore = ["E501", "B008"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=plugah --cov-report=term-missing"