name: Publish to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history for versioning
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
    
    - name: Install build dependencies
      run: |
        uv pip install --system build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check distribution
      run: |
        twine check dist/*
        ls -la dist/
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  test:
    name: Test installation
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        python -c "import plugah; print(f'Plugah {plugah.__version__} installed successfully')"
        plugah-demo --help

  publish-test-pypi:
    name: Publish to Test PyPI
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true'
    environment:
      name: test-pypi
      url: https://test.pypi.org/project/plugah/
    permissions:
      id-token: write  # Required for trusted publishing
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        verbose: true

  publish-pypi:
    name: Publish to PyPI
    needs: [build, test]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'false')
    environment:
      name: pypi
      url: https://pypi.org/project/plugah/
    permissions:
      id-token: write  # Required for trusted publishing
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true
        verbose: true

  verify:
    name: Verify PyPI release
    needs: publish-pypi
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Wait for PyPI propagation
      run: sleep 30
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install from PyPI
      run: |
        pip install plugah
        python -c "import plugah; print(f'Successfully installed plugah {plugah.__version__} from PyPI')"
    
    - name: Test CLI
      run: |
        plugah-demo --help
        python -m plugah.demo.demo_cli --help